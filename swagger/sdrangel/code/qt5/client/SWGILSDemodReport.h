/**
 * SDRangel
 * This is the web REST/JSON API of SDRangel SDR software. SDRangel is an Open Source Qt5/OpenGL 3.0+ (4.3+ in Windows) GUI and server Software Defined Radio and signal analyzer in software. It supports Airspy, BladeRF, HackRF, LimeSDR, PlutoSDR, RTL-SDR, SDRplay RSP1 and FunCube    ---   Limitations and specifcities:    * In SDRangel GUI the first Rx device set cannot be deleted. Conversely the server starts with no device sets and its number of device sets can be reduced to zero by as many calls as necessary to /sdrangel/deviceset with DELETE method.   * Preset import and export from/to file is a server only feature.   * Device set focus is a GUI only feature.   * The following channels are not implemented (status 501 is returned): ATV and DATV demodulators, Channel Analyzer NG, LoRa demodulator   * The device settings and report structures contains only the sub-structure corresponding to the device type. The DeviceSettings and DeviceReport structures documented here shows all of them but only one will be or should be present at a time   * The channel settings and report structures contains only the sub-structure corresponding to the channel type. The ChannelSettings and ChannelReport structures documented here shows all of them but only one will be or should be present at a time    --- 
 *
 * OpenAPI spec version: 7.0.0
 * Contact: f4exb06@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * SWGILSDemodReport.h
 *
 * ILSDemod
 */

#ifndef SWGILSDemodReport_H_
#define SWGILSDemodReport_H_

#include <QJsonObject>


#include <QString>

#include "SWGObject.h"
#include "export.h"

namespace SWGSDRangel {

class SWG_API SWGILSDemodReport: public SWGObject {
public:
    SWGILSDemodReport();
    SWGILSDemodReport(QString* json);
    virtual ~SWGILSDemodReport();
    void init();
    void cleanup();

    virtual QString asJson () override;
    virtual QJsonObject* asJsonObject() override;
    virtual void fromJsonObject(QJsonObject &json) override;
    virtual SWGILSDemodReport* fromJson(QString &jsonString) override;

    float getChannelPowerDb();
    void setChannelPowerDb(float channel_power_db);

    qint32 getChannelSampleRate();
    void setChannelSampleRate(qint32 channel_sample_rate);

    QString* getIdent();
    void setIdent(QString* ident);

    float getDeviation();
    void setDeviation(float deviation);

    float getSdm();
    void setSdm(float sdm);

    float getDdm();
    void setDdm(float ddm);

    float getDm90();
    void setDm90(float dm90);

    float getDm150();
    void setDm150(float dm150);


    virtual bool isSet() override;

private:
    float channel_power_db;
    bool m_channel_power_db_isSet;

    qint32 channel_sample_rate;
    bool m_channel_sample_rate_isSet;

    QString* ident;
    bool m_ident_isSet;

    float deviation;
    bool m_deviation_isSet;

    float sdm;
    bool m_sdm_isSet;

    float ddm;
    bool m_ddm_isSet;

    float dm90;
    bool m_dm90_isSet;

    float dm150;
    bool m_dm150_isSet;

};

}

#endif /* SWGILSDemodReport_H_ */
